# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="i<Lg0LgwLJb7aRnmn<W4T9jKmGNbo6L3XXdJ2`hHN?Gfgxp>?ErV_rjD]INeL?HK"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
db.orange.driver="org.postgresql.Driver"
db.orange.url="jdbc:postgresql://cgta-srv-5.cgtanalytics.com:5432/orange"
db.orange.user="orangeweb"
db.orange.password="orangeweb"

db.dash.driver="org.postgresql.Driver"
db.dash.url="jdbc:postgresql://dash:5432/test"
db.dash.user="cgtalocalwriter"
db.dash.password="cgtalocalwriter"
# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

# CORS
# ~~~~~
# Specify default domain for CORS request
# cors.allowed.domain="*"

#ldap.servers=["cgta-srv-03.cgtanalytics.com:636","cgta-srv-04.cgtanalytics.com:636","cgta-srv-09.cgtanalytics.com:636"]

#Akka debug
akka.default-dispatcher.core-pool-size-max = 64
akka.debug.receive = on

akka {
  actor {
    provider = "akka.remote.RemoteActorRefProvider"
  }
  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = "127.0.0.1"
      port = 9002
    }
 }
}

